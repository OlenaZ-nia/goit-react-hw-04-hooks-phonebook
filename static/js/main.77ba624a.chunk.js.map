{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/SearchFilter/SearchFilter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/SearchFilter/SearchFilter.js","App.js","hooksCustom/useLocalStorage.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","nanoid","handleChange","e","target","value","form","preventDefault","label","input","type","pattern","title","required","onChange","id","btnAddContact","btnText","ContactElement","onDeleteContact","contact","tel","btn","onClick","ContactList","contacts","list","map","item","SearchFilter","searchInput","autoComplete","placeholder","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","includeName","find","undefined","alert","normalizedFilter","toLowerCase","includes","getExistsContact","nameId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77ba624a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__RISeo\",\"label\":\"ContactForm_label__3SZkk\",\"input\":\"ContactForm_input__1Ge5p\",\"btnAddContact\":\"ContactForm_btnAddContact__1xMo0\",\"btnText\":\"ContactForm_btnText__1h9m6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tel\":\"ContactElement_tel__1beoF\",\"contact\":\"ContactElement_contact__27TFY\",\"btn\":\"ContactElement_btn__2A_gY\",\"btn-animation\":\"ContactElement_btn-animation__2ScPX\",\"ring\":\"ContactElement_ring__2Sulq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__GR2o9\",\"item\":\"ContactList_item__ffryi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SearchFilter_label__3FlXe\",\"searchInput\":\"SearchFilter_searchInput__yPDUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2a0Hs\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport const Container = ({children}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const nameInputId = nanoid();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onSubmit(name, number);\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n    };\r\n    \r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <label className={s.label}> Name\r\n                <input className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                       onChange={handleChange}\r\n                       id={nameInputId}\r\n                       value={name}\r\n                />\r\n            </label>\r\n            <label className={s.label}> Namber\r\n                <input className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                       onChange={handleChange}\r\n                       value={number}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.btnAddContact}>\r\n                <span className={s.btnText}>Add contact</span>\r\n            </button>\r\n            \r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nContactForm.propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactElement.module.css';\r\n\r\nexport const ContactElement = ({ name, number, id, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            <p className={s.contact}>{name}: <span className={s.tel}>{number}</span></p>\r\n            <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={()=>onDeleteContact(id)}\r\n            >\r\n                Delete\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactElement.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport { ContactElement } from \"../ContactElement/ContactElement\";\r\nimport s from './ContactList.module.css'\r\nexport const ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(({id, name, number}) => {\r\n                return (\r\n                    <li className={ s.item} key={id}>\r\n                        <ContactElement\r\n                            name={name}\r\n                            number={number}\r\n                            id={id}\r\n                            onDeleteContact={onDeleteContact}\r\n                        />\r\n                    </li>\r\n                )  \r\n            })}\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport s from './SearchFilter.module.css';\r\n\r\nconst SearchFilter = ({value, onChange}) => {\r\n    return (\r\n            <label className={s.label}> Find contacts by name\r\n            <input\r\n                className={s.searchInput}\r\n                type=\"text\"\r\n                name=\"query\"\r\n                value={value}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Search contact\"\r\n                onChange={onChange}\r\n            />\r\n            </label>\r\n        );\r\n}\r\nexport default SearchFilter\r\n\r\nSearchFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container } from './components/Container/Container';\nimport  ContactForm  from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from './components/ContactList/ContactList';\nimport SearchFilter from './components/SearchFilter/SearchFilter';\nimport { useLocalStorage } from './hooksCustom/useLocalStorage';\n\nimport 'modern-normalize/modern-normalize.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('myContacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = ( name, number ) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const includeName = contacts.find(contact => contact.name === name);\n\n    (includeName !== undefined) ?\n      (alert(`${name} is already in contacts`)\n      ):\n    setContacts(contacts => ([...contacts, contact]))\n\n  };\n\n  const handleChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getExistsContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n  };\n\n  const deleteContact = (nameId) => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== nameId))\n  };\n\n  return (\n      <Container>\n        <h1>Phone</h1>\n        <ContactForm onSubmit={ addContact}/>\n        <h2>Contacts</h2>\n        <SearchFilter value={filter} onChange={ handleChange}/>\n        <ContactList contacts={getExistsContact()} onDeleteContact={ deleteContact}/>\n      </Container>\n    );\n}\n\n\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state])\r\n\r\n  return [state, setState]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}